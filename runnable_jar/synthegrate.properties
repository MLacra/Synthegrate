###################################################
#                 OUTPUT 
###################################################
output.folder = ./scenarios

# PROFILE DATA filename
output.profile = profiling_input.xml

# MATCHES filename
output.match = match.vada

# DATASOURCE filename
output.sources = datasource.vada

# SOURCE-TARGET filename
output.source_target = sourceTargetPairs.vada

# EXPECTED MAPPING filename
output.expected_mapping = expected_mapping.sql

# ++Spicy mapping task filename
output.spicy_maptask = spicy_maptask.xml
###################################################
# 				Dictionaries folder
###################################################

input.dictionaries_folder = ./dictionaries

###################################################
# 				SCENARIO PARAMETERS
###################################################
scenario.max_source_relations = 1000
scenario.min_cardinality = 100
scenario.max_cardinality = 300 
scenario.min_arity = 5 
scenario.max_arity = 6 
scenario.tries = 1000 
scenario.schemas_number = 1 
scenario.target_relations = 1 
#if the target has more than one table, then set how many tables have a PK declared.
scenario.target_pks_number = 1 
	
scenario.max_joins_number = 1 
scenario.max_unions_number = 0 
# explicit foreign keys ratio out of the total FK opportunities that are created
scenario.fks_ratio = 0.0 
# disjoint unions ratio out of the total created
scenario.disjoint_unions = 1.0 
#reuse alreadu created attribute to split a relation in 2 relations linked through (explicit) FK
scenario.reuse_join_attributes = 0.0 
scenario.create_unions_first = false 
scenario.create_joins_first = true 

#Type of join	
scenario.star_join = false 
scenario.chain_join = true 
scenario.balanced_join = false 



###################################################
#                DATABASE PROPERTIES
###################################################
database.user=postgres
database.password=postgres
database.location = localhost
database.port = 5432
database.name = synthetic
database.schema = public
# currently, POSTGRES is the only supported database
database.jdbc_driver = JDBC_POSTGRES
database.jdbc_prefix = jdbc:postgresql://



